{"version":3,"sources":["userInput.js","utils/common.js","components/workContainer.js","components/educationContainer.js","components/skillsContainer.js","components/awardsContainer.js","components/resumeContainer.js","index.js"],"names":["badgeImgMapper","otherBadges","numberToMonth","dateConversionFromNumbers","date","console","log","Number","match","err","WorkContainer","works","combinedWorks","forEach","el","company","push","className","Object","keys","map","class","work","position","startDate","endDate","highlights","highlight","EducationContainer","educations","combinedEducation","institution","education","studyType","area","SkillsContainer","skills","combinedSkills","level","name","join","AwardsContainer","awards","award","title","ProfileImage","styled","img","Badge","a","ResumeContainer","resume","basics","src","picture","height","email","profiles","network","toLowerCase","href","url","width","alt","link","MainPage","useState","hasError","setErrors","setResume","timesRetried","setRetried","useEffect","fetch","then","res","json","jsonRes","catch","JSON","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4438969.chunk.js","sourcesContent":["\n//place your badge images here if you want your profiles to show up as badges\n//key is based on network name in the json \n//(keep keys all lowercase)\nexport const badgeImgMapper = {\n  'github':'http://www.brennanmbrown.com/GitHub-Mark-120px-plus.png',\n  'linkedin':'http://www.brennanmbrown.com/square-linkedin-512.png',\n}\n\nexport const apiEndpoint = '/api'\n\n//place other badges you want here, they must have a link, name, and img: {link: '', name:'', img:''}\nexport const otherBadges = []","\nconst numberToMonth = [\n  \"\",\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\"\n]\n\nexport const dateConversionFromNumbers = (date) => {\n  console.log(date);\n  if(!date) return null\n  try {\n    return `${numberToMonth[Number(date.match(/^\\d+/)[0])]}, ${date.match(/\\d+$/)[0]}`;\n  }\n  catch(err) {\n    console.log(err)\n    // if start/end date is not in correct format, return the initial date\n    return date;\n  }\n}\n","import React from 'react';\n\nimport { dateConversionFromNumbers } from '../utils/common'\n\nconst WorkContainer = ({\n  works\n}) => {\n\n  let combinedWorks = {};\n\n  //combine positions under the same company header\n  works.forEach(el => {\n    !combinedWorks[el.company] ? combinedWorks[el.company] = [el] \n    : combinedWorks[el.company].push(el);\n  })\n\n  return (\n  <>\n    <h2>Experience</h2>\n    <div className='indent'>\n      {Object.keys(combinedWorks).map(company => {\n        return (\n        <>\n          <div class=\"flex-parent\">\n            <div class=\"flex-header\"> {company} </div>\n            <div class=\"flex-subheader\"></div>\n            <div class=\"flex-subheader\"></div>\n          </div>\n          {combinedWorks[company].map( work =>\n            <>\n            <div class=\"flex-parent\">\n              <div class=\"flex-header\"><h5 class=\"role\">{work.position}</h5></div>\n              <div class=\"flex-subheader\">{dateConversionFromNumbers(work.startDate)} - {dateConversionFromNumbers(work.endDate) || 'Present'}</div>\n              <div class=\"flex-subheader\"></div>\n            </div>\n            <ul>\n              {work.highlights.map(highlight => {\n                return <li>{highlight}</li>\n              })}\n            \n            </ul>\n            </>\n            )}\n          </>\n        )\n      })}\n    </div>\n  </>\n  )\n}\n\nexport default WorkContainer;","import React from 'react';\n\nimport { dateConversionFromNumbers } from '../utils/common'\n\nconst EducationContainer = ({\n  educations\n}) => {\n\n  let combinedEducation = {};\n\n  //combine degrees under the same institution header\n  educations.forEach(el => {\n    !combinedEducation[el.institution] ? combinedEducation[el.institution] = [el] \n    : combinedEducation[el.institution].push(el);\n  })\n\n  return (\n    <>\n    <h2>Education</h2>\n    <div class=\"indent\">\n    {Object.keys(combinedEducation).map(institution => {\n      return (\n      <>\n      <div class=\"flex-parent\">\n      <div class=\"flex-header\"> {institution} </div>\n        <div class=\"flex-subheader\"> {dateConversionFromNumbers(combinedEducation[institution][0].startDate)} - {dateConversionFromNumbers(combinedEducation[institution][0].endDate) || 'Present'} </div>\n        <div class=\"flex-subheader\"></div>\n      </div>\n        {combinedEducation[institution].map(education => {\n          return education.studyType === 'Minor' ? <div class=\"indent\"> <h6 class=\"education\"> \n            {`${education.studyType}: ${education.area} `}\n           </h6></div> \n           : <h5 class=\"education\"> \n            {`${education.studyType}: ${education.area} `}\n           </h5> \n            \n        })}\n      </>\n      )})}\n    </div>\n    </>\n  )\n}\n\nexport default EducationContainer;","import React from 'react';\n\nconst SkillsContainer = ({\n  skills\n}) => {\n\n  let combinedSkills = {};\n\n  //combine degrees under the same institution header\n  skills.forEach(el => {\n    !combinedSkills[el.level] ? combinedSkills[el.level] = [el.name] \n    : combinedSkills[el.level].push(el.name);\n  })\n\n  return (\n    <>\n    <h2>Skills</h2>\n    <div class=\"indent\">\n    {Object.keys(combinedSkills).map(level => {\n      return (\n        <>\n        <div class=\"skill-header\">\n          {level} :\n        </div>\n        <div class=\"skill\"> \n          {combinedSkills[level].join(' | ')} \n        </div> <br />\n        </>\n      )})}\n    </div>\n    </>\n  )\n}\n\nexport default SkillsContainer;","import React from 'react'; \nconst AwardsContainer = (\n  {awards}\n) => {\n  return (\n    <>\n      <h2> {'Awards & Certifications'} </h2>\n        <div class=\"indent\">\n        <ul>\n          {awards.map(award => {\n            return (\n              <li>{award.title}</li>\n            )\n          })}\n        </ul>\n        </div>\n    </>\n  );\n}\nexport default AwardsContainer","import React from 'react';\nimport styled from 'styled-components';\n\nimport { badgeImgMapper, otherBadges } from '../userInput'\nimport { dateConversionFromNumbers } from '../utils/common'\nimport WorkContainer from './workContainer'\nimport EducationContainer from './educationContainer'\nimport SkillsContainer from './skillsContainer'\nimport AwardsContainer from './awardsContainer'\n\nconst ProfileImage = styled.img`\n  border-radius:50px\n`\n\nconst Badge = styled.a`\n  display:inline-block; \n  padding:5px;\n`\n\nconst ResumeContainer = ({\n  resume\n}) => {\n  console.log(resume);\n  return !resume.basics ? <p>resume empty</p> : \n  <>\n    <header>\n\t\t\t<div className=\"flex-parent\">\n\t\t\t\t<div>\n\t\t\t\t\t<ProfileImage src={resume.basics.picture} height=\"250em\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-header\">\n\t\t\t\t\t<h1>Brennan Brown</h1>\n\t\t\t\t\t<h4>Software Developer</h4>\n\t\t\t\t\t<div className=\"links\">\n\t\t\t\t\t\t\t{resume.basics.email && 'Email: ' + resume.basics.email} <br />\n              {resume.basics.profiles && resume.basics.profiles.map(el => {\t\t\t\t\n                return ( badgeImgMapper[el.network.toLowerCase()] &&\n                <Badge href={el.url}>\n                  <img src={badgeImgMapper[el.network.toLowerCase()]} width=\"64px\" height=\"64px\" alt={el.network} /> \n                </Badge>)\n              })}\n              {otherBadges && otherBadges.map(el => {\t\t\t\t\n                return (  \n                <Badge href={el.link}>\n                  <img src={el.img} width=\"64px\" height=\"64px\" alt={el.name} /> \n                </Badge>)\n              })}\t\t\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n    {resume.work && <WorkContainer works={resume.work}/>}\n    {resume.education && <EducationContainer educations={resume.education} />}\n    {resume.awards && <AwardsContainer awards={resume.awards} />}\n    {resume.skills && <SkillsContainer skills={resume.skills} />}\n  </>\n}\n\nexport default ResumeContainer;","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport ResumeContainer from './components/resumeContainer';\nimport { apiEndpoint } from './userInput'\nimport './resume.css';\n\nconst MainPage = () => {\n  const [hasError, setErrors] = useState(false);\n  const [resume, setResume] = useState({});\n  const [timesRetried, setRetried] = useState(0)\n\n  const timesToRetry = 5;\n\n  const fetchData = () => {\n    fetch(`${apiEndpoint}/resume`)\n    .then(res => \n      res.json()\n        .then(jsonRes => {\n          console.log(jsonRes)\n          setResume(jsonRes)\n          setErrors(false);\n        })\n        .catch(err => setErrors(true)))\n    .catch(() => {\n      if(timesRetried < timesToRetry) {\n        setRetried(timesRetried + 1);\n        setErrors(true);\n      }\n    });\n      \n}\n  useEffect(() => {\n    fetchData();\n  }, [timesRetried]);\n\n  return (\n    <div>\n      {hasError ? \n        <span>Error: {JSON.stringify(hasError)}</span>\n        : <ResumeContainer resume={resume} />\n      }\n    </div>\n  );\n};\n\nReactDOM.render(\n  <MainPage />\n  , document.getElementById('app')\n)\n\nexport default MainPage;"],"sourceRoot":""}